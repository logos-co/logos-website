"use strict";(self.webpackChunklogos_docs=self.webpackChunklogos_docs||[]).push([[935],{190:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var t=s(4848),o=s(8453);const i={title:"C++ SDK",slug:"/sdks/cpp-sdk",description:"Generated C++ wrappers for building Logos modules and applications."},r="C++ SDK",a={id:"sdks/cpp-sdk",title:"C++ SDK",description:"Generated C++ wrappers for building Logos modules and applications.",source:"@site/docs/sdks/cpp-sdk.md",sourceDirName:"sdks",slug:"/sdks/cpp-sdk",permalink:"/logos-website/docs/sdks/cpp-sdk",draft:!1,unlisted:!1,editUrl:"https://github.com/logos-co/logos-website/edit/main/website/docs/sdks/cpp-sdk.md",tags:[],version:"current",frontMatter:{title:"C++ SDK",slug:"/sdks/cpp-sdk",description:"Generated C++ wrappers for building Logos modules and applications."},sidebar:"docs",previous:{title:"Nim SDK",permalink:"/logos-website/docs/sdks/nim-sdk"},next:{title:"Building Apps",permalink:"/logos-website/docs/logos-app/building-apps"}},l={},d=[{value:"Quick Start",id:"quick-start",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Examples",id:"examples",level:2},{value:"Subscribing to Chat Events from a UI Layer",id:"subscribing-to-chat-events-from-a-ui-layer",level:3},{value:"Triggering Events from Your Module",id:"triggering-events-from-your-module",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"c-sdk",children:"C++ SDK"}),"\n",(0,t.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:'#include <QCoreApplication>\n#include "logos_api.h"\n#include "generated/logos_sdk.h"\n\nint main(int argc, char** argv) {\n    QCoreApplication app(argc, argv);\n\n    // Expose this module as "chat_client".\n    LogosAPI logos{"chat_client"};\n    LogosModules modules{&logos};\n\n    modules.core_manager.initialize(argc, argv);\n    modules.core_manager.setPluginsDirectory("./build/plugins");\n    modules.core_manager.start();\n    // Provide the built plugin path (shared library extension varies per platform).\n    modules.core_manager.processPlugin("./modules/waku_module.dylib");\n    modules.core_manager.processPlugin("./modules/chat_module.dylib");\n    modules.core_manager.loadPlugin("waku_module");\n    modules.core_manager.loadPlugin("chat");\n\n    modules.chat.on("chatMessage", [](const QVariantList& data) {\n        const auto timestamp = data[0].toString();\n        const auto nick = data[1].toString();\n        const auto text = data[2].toString();\n        qInfo() << timestamp << nick << ":" << text;\n    });\n\n    modules.chat.initialize();\n    modules.chat.joinChannel("general");\n    modules.chat.sendMessage("general", "alice", "Hello Logos!");\n\n    return app.exec();\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"subscribing-to-chat-events-from-a-ui-layer",children:"Subscribing to Chat Events from a UI Layer"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:'// Acquire replicas only when needed and reuse them via the generated wrapper.\nmodules.chat.on("chatMessage", [this](const QVariantList& data) {\n    const QString timestamp = data[0].toString();\n    const QString nick = data[1].toString();\n    const QString message = data[2].toString();\n    QMetaObject::invokeMethod(this, "appendMessage", Qt::QueuedConnection,\n                              Q_ARG(QString, timestamp),\n                              Q_ARG(QString, nick),\n                              Q_ARG(QString, message));\n});\n'})}),"\n",(0,t.jsx)(n.h3,{id:"triggering-events-from-your-module",children:"Triggering Events from Your Module"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:'class ChatBridge : public QObject {\n    Q_OBJECT\npublic:\n    explicit ChatBridge(LogosModules& modules)\n        : m_modules(modules) {\n        m_modules.chat.setEventSource(this);\n    }\n\n    void forwardToRemote(const QString& timestamp, const QString& nick, const QString& message) {\n        m_modules.chat.trigger("chatMessage", this, timestamp, nick, message);\n    }\n\nprivate:\n    LogosModules& m_modules;\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cannot connect to registry"}),": Ensure the target module is running and has registered its provider. The client will connect to ",(0,t.jsx)(n.code,{children:"local:logos_<module>"}),"; verify that socket exists and that ",(0,t.jsx)(n.code,{children:"LOGOS_HOST_PATH"})," points to a built ",(0,t.jsx)(n.code,{children:"logos_host"})," binary."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Plugin methods return invalid QVariant"}),": The core must be started (",(0,t.jsx)(n.code,{children:"core_manager.start()"}),") and the module must be fully loaded. Missing capability tokens also cause silent failures\u2014check the capability module logs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Events never arrive"}),": Confirm you called ",(0,t.jsx)(n.code,{children:"on(...)"})," after the remote module published its object, and keep the Qt event loop alive (",(0,t.jsx)(n.code,{children:"QCoreApplication::exec()"})," or ",(0,t.jsx)(n.code,{children:"logos_core_process_events()"})," in embedding scenarios)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Generated headers missing"}),": Re-run the build from the repository root; the generated wrappers in ",(0,t.jsx)(n.code,{children:"logos-cpp-sdk/cpp/generated/"})," are committed but expect CMake to add the directory to include paths."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var t=s(6540);const o={},i=t.createContext(o);function r(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);