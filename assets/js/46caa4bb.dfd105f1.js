"use strict";(self.webpackChunklogos_docs=self.webpackChunklogos_docs||[]).push([[58],{8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>d});var t=o(6540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}},8915:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var t=o(4848),s=o(8453);const r={title:"Architecture",description:"Internal architecture and design goals of liblogos."},i=void 0,d={id:"liblogos/architecture",title:"Architecture",description:"Internal architecture and design goals of liblogos.",source:"@site/docs/liblogos/architecture.md",sourceDirName:"liblogos",slug:"/liblogos/architecture",permalink:"/logos-website/docs/liblogos/architecture",draft:!1,unlisted:!1,editUrl:"https://github.com/logos-co/logos-website/edit/main/website/docs/liblogos/architecture.md",tags:[],version:"current",frontMatter:{title:"Architecture",description:"Internal architecture and design goals of liblogos."},sidebar:"docs",previous:{title:"How to Create a Module",permalink:"/logos-website/docs/liblogos/how-to-create-a-module"},next:{title:"overview",permalink:"/logos-website/docs/modules/overview"}},l={},c=[{value:"Publishing Your Own Module",id:"publishing-your-own-module",level:3},{value:"Core Concepts",id:"core-concepts",level:2},{value:"LogosAPI Runtime",id:"logosapi-runtime",level:3},{value:"Generated Module Wrappers",id:"generated-module-wrappers",level:3},{value:"Event Handling",id:"event-handling",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"LogosAPI",id:"logosapi",level:3},{value:"LogosAPIProvider",id:"logosapiprovider",level:3},{value:"LogosAPIClient",id:"logosapiclient",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"... needs a lot more detail than this..."}),"\n",(0,t.jsx)(n.h3,{id:"publishing-your-own-module",children:"Publishing Your Own Module"}),"\n",(0,t.jsx)(n.p,{children:"Modules expose their Qt objects through the SDK provider. The generated wrappers automatically enforce token checking by routing calls through the module proxy."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:'#include "logos_api.h"\n#include "logos_api_provider.h"\n\nclass ChatModule : public QObject {\n    Q_OBJECT\n    Q_INVOKABLE bool initialize();\n    // ...\n};\n\nChatModule module;\nLogosAPI logos{"chat"};\nlogos.getProvider()->registerObject("chat", &module);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Once registered, other modules can use the generated ",(0,t.jsx)(n.code,{children:"Chat"})," proxy to call ",(0,t.jsx)(n.code,{children:"initialize"}),", ",(0,t.jsx)(n.code,{children:"joinChannel"}),", ",(0,t.jsx)(n.code,{children:"sendMessage"}),", and subscribe to ",(0,t.jsx)(n.code,{children:"chatMessage"})," events."]}),"\n",(0,t.jsx)(n.h2,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,t.jsx)(n.h3,{id:"logosapi-runtime",children:"LogosAPI Runtime"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"LogosAPI"})," is the entry point a module instantiates with its own name. It creates:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["a ",(0,t.jsx)(n.code,{children:"LogosAPIProvider"})," that publishes locally owned objects via Qt Remote Objects and wraps them with ",(0,t.jsx)(n.code,{children:"ModuleProxy"})," for token enforcement and event forwarding."]}),"\n",(0,t.jsxs)(n.li,{children:["a cached set of ",(0,t.jsx)(n.code,{children:"LogosAPIClient"})," instances, one per remote module, that handle replica acquisition, method invocation, and callback dispatching."]}),"\n",(0,t.jsxs)(n.li,{children:["a shared ",(0,t.jsx)(n.code,{children:"TokenManager"})," responsible for negotiating and storing inter-module tokens."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"generated-module-wrappers",children:"Generated Module Wrappers"}),"\n",(0,t.jsxs)(n.p,{children:["Each header under ",(0,t.jsx)(n.code,{children:"logos-cpp-sdk/cpp/generated/"})," corresponds to a Logos module (for example ",(0,t.jsx)(n.code,{children:"chat_api.h"}),", ",(0,t.jsx)(n.code,{children:"core_manager_api.h"}),", ",(0,t.jsx)(n.code,{children:"package_manager_api.h"}),", ",(0,t.jsx)(n.code,{children:"waku_module_api.h"}),"). Wrappers:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Provide typed C++ member functions that forward to ",(0,t.jsx)(n.code,{children:"invokeRemoteMethod"})," with the correct module name."]}),"\n",(0,t.jsxs)(n.li,{children:["Offer ",(0,t.jsx)(n.code,{children:"on"})," helpers for connecting lambdas to remote ",(0,t.jsx)(n.code,{children:"eventResponse"})," signals, and ",(0,t.jsx)(n.code,{children:"trigger"})," helpers for emitting events from your module back to clients."]}),"\n",(0,t.jsxs)(n.li,{children:["Cache remote replicas for event wiring, reducing boilerplate around ",(0,t.jsx)(n.code,{children:"requestObject"})," and Qt signal signatures."]}),"\n",(0,t.jsxs)(n.li,{children:["Are grouped by ",(0,t.jsx)(n.code,{children:"LogosModules"}),", a convenience struct that builds all known wrappers from a shared ",(0,t.jsx)(n.code,{children:"LogosAPI"})," instance."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"event-handling",children:"Event Handling"}),"\n",(0,t.jsx)(n.p,{children:"All generated classes expose:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"bool on(const QString&, RawEventCallback)"})," and a convenience overload that unwraps only the payload ",(0,t.jsx)(n.code,{children:"QVariantList"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"setEventSource(QObject*)"})," to tell the wrapper which local QObject should emit events when you call ",(0,t.jsx)(n.code,{children:"trigger"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"trigger(...)"})," overloads that package arguments into ",(0,t.jsx)(n.code,{children:"QVariantList"})," and forward them via ",(0,t.jsx)(n.code,{children:"LogosAPIClient::onEventResponse"})," so that subscribers receive ",(0,t.jsx)(n.code,{children:"eventResponse"})," notifications."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,t.jsx)(n.p,{children:"You can interact diretly with the Logos API without using the generated API if you so wish"}),"\n",(0,t.jsx)(n.h3,{id:"logosapi",children:"LogosAPI"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Member"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"explicit LogosAPI(const QString& moduleName, QObject* parent = nullptr)"})}),(0,t.jsxs)(n.td,{children:["Sets up provider, token manager, and client cache for ",(0,t.jsx)(n.code,{children:"moduleName"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LogosAPIProvider* getProvider() const"})}),(0,t.jsx)(n.td,{children:"Returns the provider used to register local objects."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LogosAPIClient* getClient(const QString& targetModule) const"})}),(0,t.jsx)(n.td,{children:"Lazily creates and returns a client for the target module."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"logosapiprovider",children:"LogosAPIProvider"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Member"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"bool registerObject(const QString& name, QObject* object)"})}),(0,t.jsxs)(n.td,{children:["Publishes ",(0,t.jsx)(n.code,{children:"object"})," under ",(0,t.jsx)(n.code,{children:"local:logos_<module>"})," and wraps it in ",(0,t.jsx)(n.code,{children:"ModuleProxy"}),". Calls ",(0,t.jsx)(n.code,{children:"initLogos"})," on the object when available."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"void unregisterObject()"})}),(0,t.jsx)(n.td,{children:"Stops exposing the previously registered object."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ModuleProxy* proxy() const"})}),(0,t.jsx)(n.td,{children:"Access the proxy to inform tokens or inspect metadata."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"logosapiclient",children:"LogosAPIClient"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Member"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"QObject* requestObject(const QString& objectName, int timeoutMs = 20000)"})}),(0,t.jsx)(n.td,{children:"Retrieves a replica for events or direct method invocation."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"QVariant invokeRemoteMethod(...)"})}),(0,t.jsx)(n.td,{children:"Overloaded for 0\u20135 arguments; forwards the call together with the caller token."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"void onEvent(QObject* origin, QObject* destination, const QString& event, Callback)"})}),(0,t.jsx)(n.td,{children:"Subscribes to remote events and dispatches results."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"void onEventResponse(QObject* replica, const QString& eventName, const QVariantList& data)"})}),(0,t.jsx)(n.td,{children:"Emits an event to connected replicas (used when your module is the event source)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"bool informModuleToken(...)"})}),(0,t.jsx)(n.td,{children:"Shares capability and module tokens with dependents."})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);