"use strict";(self.webpackChunklogos_docs=self.webpackChunklogos_docs||[]).push([[530],{72:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>r});var i=s(4848),t=s(8453);const l={title:"Chat Module",description:"Overview and usage of the Logos chat module."},o="Chat Module",c={id:"modules/chat",title:"Chat Module",description:"Overview and usage of the Logos chat module.",source:"@site/docs/modules/chat.md",sourceDirName:"modules",slug:"/modules/chat",permalink:"/logos-website/docs/modules/chat",draft:!1,unlisted:!1,editUrl:"https://github.com/logos-co/logos-website/edit/main/website/docs/modules/chat.md",tags:[],version:"current",frontMatter:{title:"Chat Module",description:"Overview and usage of the Logos chat module."},sidebar:"docs",previous:{title:"overview",permalink:"/logos-website/docs/modules/overview"},next:{title:"Package Manager Module",permalink:"/logos-website/docs/modules/package-manager"}},a={},r=[{value:"Overview",id:"overview",level:2},{value:"API",id:"api",level:2},{value:"Methods",id:"methods",level:3},{value:"Events",id:"events",level:3},{value:"Notes",id:"notes",level:3},{value:"Examples",id:"examples",level:2},{value:"C++",id:"c",level:3},{value:"Javascript",id:"javascript",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"chat-module",children:"Chat Module"}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The Chat Module is a simple proof of concept Chat built on top of ",(0,i.jsx)(n.code,{children:"Waku"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,i.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"initialize()"})," \u2192 ",(0,i.jsx)(n.code,{children:"bool"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Starts internal wiring with ",(0,i.jsx)(n.code,{children:"waku_module"})," and installs an event handler that decodes incoming chat payloads and emits ",(0,i.jsx)(n.code,{children:"chatMessage"})," events."]}),"\n",(0,i.jsxs)(n.li,{children:["Returns ",(0,i.jsx)(n.code,{children:"true"})," on success."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"joinChannel(channelName: string)"})," \u2192 ",(0,i.jsx)(n.code,{children:"bool"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Subscribes to the channel's content topic via ",(0,i.jsx)(n.code,{children:"Waku Filter"})," and tracks it for incoming event dispatch."]}),"\n",(0,i.jsxs)(n.li,{children:["Accepts either a bare channel (e.g. ",(0,i.jsx)(n.code,{children:'"general"'}),") or a full content topic (e.g. ",(0,i.jsx)(n.code,{children:'"/toy-chat/2/general/proto"'}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["Returns ",(0,i.jsx)(n.code,{children:"true"})," if subscription succeeded."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"sendMessage(channelName: string, username: string, message: string)"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Encodes a protobuf chat message and publishes it on the default pubsub topic with the channel's content topic."}),"\n",(0,i.jsx)(n.li,{children:"Accepts either bare channel or full content topic."}),"\n",(0,i.jsx)(n.li,{children:"Does not return a value; logs errors if publish fails."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"retrieveHistory(channelName: string)"})," \u2192 ",(0,i.jsx)(n.code,{children:"bool"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Queries a ",(0,i.jsx)(n.code,{children:"Waku Store"})," node for recent messages on the channel's content topic and emits a ",(0,i.jsx)(n.code,{children:"historyMessage"})," event for each decoded entry."]}),"\n",(0,i.jsxs)(n.li,{children:["Returns ",(0,i.jsx)(n.code,{children:"true"})," if the query wiring starts successfully (results arrive via events)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"events",children:"Events"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"chatMessage"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Emitted for every decoded live message on any joined channel."}),"\n",(0,i.jsxs)(n.li,{children:["Payload (",(0,i.jsx)(n.code,{children:"QVariantList"})," / JSON array): ",(0,i.jsx)(n.code,{children:"[timestamp: string, nick: string, message: string]"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["FFI event JSON example: ",(0,i.jsx)(n.code,{children:'{ "event": "chatMessage", "data": ["2025-01-01 12:00:00 UTC", "alice", "hello"] }'}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"historyMessage"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Emitted for each decoded message returned by ",(0,i.jsx)(n.code,{children:"retrieveHistory"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Payload (",(0,i.jsx)(n.code,{children:"QVariantList"})," / JSON array): ",(0,i.jsx)(n.code,{children:"[timestamp: string, nick: string, message: string]"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Call ",(0,i.jsx)(n.code,{children:"initialize()"})," once before ",(0,i.jsx)(n.code,{children:"joinChannel()"})," and ",(0,i.jsx)(n.code,{children:"sendMessage()"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"c",children:"C++"}),"\n",(0,i.jsxs)(n.p,{children:["Using generated ",(0,i.jsx)(n.code,{children:"C++"})," wrappers from another module"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'// Subscribe to live messages\nlogos.chat.on("chatMessage", [](const QVariantList& data) {\n    const auto ts = data[0].toString();\n    const auto nick = data[1].toString();\n    const auto text = data[2].toString();\n    qInfo() << ts << nick << ":" << text;\n});\n\n// Initialize and join a channel\nlogos.chat.initialize();\nlogos.chat.joinChannel("general");\n\n// Send a message using the generated API\nlogos.chat.sendMessage("general", "alice", "Hello from another module!");\n'})}),"\n",(0,i.jsx)(n.h3,{id:"javascript",children:"Javascript"}),"\n",(0,i.jsxs)(n.p,{children:["Using the ",(0,i.jsx)(n.code,{children:"JavaScript"})," SDK (reflective API)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const LogosAPI = require('logos-api');\n\nconst logos = new LogosAPI();\nlogos.start();\nlogos.processAndLoadPlugins([\"waku_module\", \"chat\"]);\nlogos.startEventProcessing();\n\n// Subscribe to events\nlogos.chat.onChatMessage((evt) => {\n  console.log('chatMessage:', evt);\n});\n\n(async () => {\n  await logos.chat.initialize();\n  await logos.chat.joinChannel('general');\n  await logos.chat.sendMessage('general', 'alice', 'Hello Logos!');\n  await logos.chat.retrieveHistory('general');\n})();\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(6540);const t={},l=i.createContext(t);function o(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);